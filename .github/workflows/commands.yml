name: PR Commands
on:
  issue_comment:
    types: [created, edited]

jobs:
  report:
    if: ${{ github.event.issue.pull_request && contains(github.event.issue.labels.*.name, 'new theme') }}
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "On PR #$NUM @$ACTOR commented:"
        echo "$BODY"
        echo "=============================="
        echo "PR original body:"
        echo "$PRBODY"
        echo "=============================="
        echo "PR JSON:"
        echo "$PR_JSON"
    env:
      PR_JSON: ${{ toJSON(github.event.issue.pull_request) }}
      ACTOR: ${{ github.actor }}
      NUM: ${{ github.event.issue.number }}
      BODY: ${{ github.event.comment.body }}
      PRBODY: ${{ github.event.issue.body }}
  update-theme:
    if: ${{ github.event.issue.pull_request && contains(github.event.issue.labels.*.name, 'new theme') && contains(github.event.comment.body, '!update') }}
    runs-on: ubuntu-latest
    steps:
    - name: Get head branch
      uses: eficode/resolve-pr-refs@v0.0.4
      id: branch
      with:
        token: ${{ github.token }}
    - name: Checkout
      uses: actions/checkout@v2.7.0
      with:
        ref: ${{ steps.branch.outputs.head_ref }}
    - name: Read body
      id: parse
      uses: edumserrano/github-issue-forms-parser@v1
      with:
        template-filepath: .github/ISSUE_TEMPLATE/new-theme.yml
        issue-form-body: ${{ github.event.issue.body }}
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
    - name: Extract command parameters
      id: extractcmd
      run: |
        ONELINE_MATCH="$(grep -m1 -P '^!update [A-Za-z0-9]([A-Za-z_.-]*[A-Za-z0-9])? [A-Za-z"\[]([A-Za-z_#\[\],"-]*[A-Za-z0-9"\]])?$' <<< "$BODY")" && echo "err=false" >> "$GITHUB_OUTPUT" || echo "err=true" >> "$GITHUB_OUTPUT"
        MATCH="$(tr ' ' '\n' <<< "$ONELINE_MATCH")"
        echo "prop=$(head -n2 <<< "$MATCH" | tail -n1)" >> "$GITHUB_OUTPUT"
        echo "good=$(tail -n1 <<< "$MATCH")" >> "$GITHUB_OUTPUT"
        set
      env:
        BODY: ${{ github.event.comment.body }}
    - name: Report error
      if: ${{ steps.extractcmd.outputs.err == 'true' }}
      run: |
        gh pr comment ${{ github.event.issue.number }} --body '‚ùå Could not find the update data. Type `!help update-theme` to get help.'
        exit 1
      env:
        GH_TOKEN: ${{ github.token }}
    - name: Make the change
      id: change
      run: |
        err=0
        echo 'logs<<EOF' >> "$GITHUB_OUTPUT"
        node scripts/add-new-theme.cjs "$(jq <<< "$THEMEINFO" ".$PROP=$GOOD" 2>> "$GITHUB_OUTPUT" || err=1)" &>> "$GITHUB_OUTPUT"
        echo '==============================' &>> "$GITHUB_OUTPUT"
        ( cat themes.new.json | jq --tab . | tee src/themes.json ) &>> "$GITHUB_OUTPUT" || err=1
        echo >> "$GITHUB_OUTPUT" # ensure newline at the end
        echo 'EOF' >> "$GITHUB_OUTPUT"
        exit "$err"
      env:
        THEMEINFO: ${{ steps.parse.outputs.parsed-issue }}
        PROP: ${{ steps.extractcmd.outputs.prop }}
        GOOD: ${{ steps.extractcmd.outputs.good }}
    - name: Configure Git
      id: gitconfig
      run: |
        echo 'logs<<EOF' >> "$GITHUB_OUTPUT"
        ( git config --global user.name "$GNAME" && git config --global user.email "$GEMAIL" ) &>> "$GITHUB_OUTPUT"
        echo >> "$GITHUB_OUTPUT" # ensure newline at the end
        echo 'EOF' >> "$GITHUB_OUTPUT"
      env:
        GNAME: ${{ github.actor }}
        GEMAIL: ${{ github.actor }}@users.noreply.github.com
    - name: Commit and push
      id: commit
      run: |
        echo 'logs<<EOF' >> "$GITHUB_OUTPUT"
        git add src/themes.json &>> "$GITHUB_OUTPUT"
        git commit -m"Update $PROP to $GOOD" &>> "$GITHUB_OUTPUT"
        git push &>> "$GITHUB_OUTPUT"
        echo >> "$GITHUB_OUTPUT" # ensure newline at the end
        echo 'EOF' >> "$GITHUB_OUTPUT"
      env:
        PROP: ${{ steps.extractcmd.outputs.prop }}
        GOOD: ${{ steps.extractcmd.outputs.good }}
    - name: Report error
      if: ${{ failure() }}
      run: |
        if [ "$CHANGE" = failure ]; then
          gh issue comment ${{ github.event.issue.number }} --body "‚ùå An error occured while doing the change:
        
        \`\`\`$CHLOGS\`\`\`"
        elif [ "$GITCONFIG" = failure ]; then
          gh issue comment ${{ github.event.issue.number }} --body "‚ùå An internal error occured while configuring Git:
        
        \`\`\`$GCLOGS\`\`\`"
        elif [ "$COMMIT" = failure ]; then
          gh issue comment ${{ github.event.issue.number }} --body "‚ùå An internal error occured while commiting the changes:
        
        \`\`\`$COMMIT_LOGS\`\`\`"
        else
          gh issue comment ${{ github.event.issue.number }} --body '‚ùå An internal error occured.'
        fi
      env:
        CHANGE: ${{ steps.change.conclusion }}
        CHLOGS: ${{ steps.change.logs }}
        GITCONFIG: ${{ steps.gitconfig.conclusion }}
        GCLOGS: ${{ steps.gitconfig.logs }}
        COMMIT: ${{ steps.commit.conclusion }}
        COMMIT_LOGS: ${{ steps.commit.logs }}
        PROP: ${{ steps.extractcmd.outputs.prop }}
        GH_TOKEN: ${{ github.token }}
    - name: Comment on PR
      run: |
        gh pr comment ${{ github.event.issue.number }} --body "üéâ Updated \`$PROP\` successfully üëè"
      env:
        PROP: ${{ steps.extractcmd.outputs.prop }}
        GH_TOKEN: ${{ github.token }}
  update-theme-help:
    if: ${{ github.event.issue.pull_request && contains(github.event.issue.labels.*.name, 'new theme') && contains(github.event.comment.body, '!help update-theme') }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2.7.0
    - name: Comment on PR
      run: |
        gh pr comment ${{ github.event.issue.number }} --body "$BODY"
      env:
        BODY: |
          Welcome, @${{ github.actor }}.

          The `!update` command can be used as following:
          ```
          !update <PROPERTY NAME> <NEW VALUE>
          ```

          Here are the property names:
          
          Field                              | Property name
          ---------------------------------- | ------------------
          Internal name                      | `name`
          Full name                          | `fullName`
          Background color                   | `bgcolor`
          Color                              | `color`
          Light square color - NORMAL        | `lscolor`
          Light square color - SELECTED      | `lscolor-selected`
          Light square color - POSSIBLE MOVE | `lscolor-canmove`
          Dark square color - NORMAL         | `dscolor`
          Dark square color - SELECTED       | `dscolor-selected`
          Dark square color - POSSIBLE MOVE  | `dscolor-canmove`
        GH_TOKEN: ${{ github.token }}
